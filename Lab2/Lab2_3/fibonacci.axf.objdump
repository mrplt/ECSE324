
C:/Users/murat/Desktop/Lab2_3/fibonacci.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
			.text
			.global _start

_start:		LDR R1, COEFF //holds the coefficient
   0:	e59f1058 	ldr	r1, [pc, #88]	; 60 <COEFF>
			PUSH {LR} //pushes LR to the stack
   4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
			BL FIBONR //branches to fibonr
   8:	eb000002 	bl	18 <FIBONR>
			POP {LR} //pops from stack to LR
   c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
			STR R3, RESULT //stores the result
  10:	e58f304c 	str	r3, [pc, #76]	; 64 <RESULT>
			B END
  14:	ea000010 	b	5c <END>

00000018 <FIBONR>:

FIBONR:		CMP R1, #2 //R1(COEFF)-2
  18:	e3510002 	cmp	r1, #2
			BLE BASECASE //base case, when coefficient is 0 or 1
  1c:	da00000c 	ble	54 <BASECASE>
			SUBS R1, R1, #1 //equals to n-2
  20:	e2511001 	subs	r1, r1, #1
			PUSH {LR} //pushes LR to the stack
  24:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
			BL FIBONR //branches to fibonr to calc n-2
  28:	ebfffffa 	bl	18 <FIBONR>
			POP {LR} //pops from stack to LR
  2c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
			PUSH {R0} //pushes Fibonacci(N-2) to the stack
  30:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
			SUBS R1, R1, #1 //adds 1 to R1 to calculate Fib(N-1)
  34:	e2511001 	subs	r1, r1, #1
			PUSH {LR} //pushes LR to stack
  38:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
			BL FIBONR //branches to fibonr to calculate n-1
  3c:	ebfffff5 	bl	18 <FIBONR>
			POP {LR} //pops from stack to LR
  40:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
			POP {R3} //pops the interim fibonacci nr
  44:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
			ADD R1, R1, #2 //R1 is equal to N again
  48:	e2811002 	add	r1, r1, #2
			ADD R0, R0, R3 //adds Fib(n-1)+Fib(n-2)
  4c:	e0800003 	add	r0, r0, r3
			BX LR //branches back to LR
  50:	e12fff1e 	bx	lr

00000054 <BASECASE>:

BASECASE:	MOV R0, #1 //base case, equal to 1
  54:	e3a00001 	mov	r0, #1
			BX LR //branches back to LR
  58:	e12fff1e 	bx	lr

0000005c <END>:


END:		B END
  5c:	eafffffe 	b	5c <END>

00000060 <COEFF>:
  60:	0000000b 	.word	0x0000000b

00000064 <RESULT>:
  64:	00000000 	.word	0x00000000
